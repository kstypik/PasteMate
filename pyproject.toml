[project]
name = "pastemate"
version = "2.0.0"
description = "Paste app with syntax highlighting"
authors = [{ name = "Kacper Stypik", email = "kacper@stypik.pl" }]
license = { text = "GNU GPL v3" }
requires-python = ">=3.13"
dependencies = [
    "Django>=4.0.5",
    "django-allauth>=0.50.0",
    "Pillow>=9.1.1",
    "django-crispy-forms>=1.14.0",
    "crispy-bootstrap5>=0.6",
    "django-environ>=0.8.1",
    "Pygments>=2.12.0",
    "django-model-utils>=4.2.0",
    "django-hitcount>=1.3.5",
    "django-hcaptcha-field>=1.3.0",
    "psycopg2-binary>=2.9.3",
    "gunicorn>=20.1.0",
    "django-cleanup>=6.0.0",
    "djangorestframework>=3.13.1",
    "django-rest-knox>=4.2.0",
    "drf-spectacular>=0.23.1",
]

[dependency-groups]
dev = [
    "django-debug-toolbar>=3.4.0",
    "pytest>=7.1.2",
    "pytest-django>=4.5.2",
    "coverage>=6.4.1",
    "django-coverage-plugin>=2.0.3",
    "pytest-xdist>=2.5.0",
    "ruff>=0.9.7",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "*/migrations/*.py",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.13
target-version = "py313"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    "E4",
    "E7",
    "E9",
    "F",
    "N",
    "UP",
    "YTT",
    "S",
    "BLE",
    "FBT",
    "B",
    "A",
    "C4",
    "DTZ",
    "T10",
    "DJ",
    "EM",
    "G",
    "INP",
    "PIE",
    "T20",
    "PT",
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SLOT",
    "SIM",
    "TID",
    "INT",
    "PTH",
    "ERA",
    "TRY",
    "PERF",
    "FURB",
    "LOG",
    "RUF",
]
ignore = ["N815", "PT009", "RET504", "ERA001", "RUF012"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.per-file-ignores]
"*/tests.py" = ["S101", "S106"]
"*/test_*.py" = ["S101", "S106"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--ds=config.settings.test --log-cli-level=INFO --showlocals --reuse-db"
python_files = ["tests.py", "test_*.py"]
